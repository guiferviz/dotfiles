
snippet main "Main definition and if-main" b
def main():
	${0:${VISUAL:pass}}


if __name__ == "__main__":
	main()
endsnippet

snippet with "with" b
with ${1:expr}`!p snip.rv = " as " if t[2] else ""`${2:var}:
	${3:${VISUAL:pass}}
$0
endsnippet

snippet for "For loop" b
for ${1:item} in ${2:iterable}:
	${3:${VISUAL:pass}}
endsnippet

########
#  If  #
########

snippet if "If" b
if ${1:condition}:
	${2:${VISUAL:pass}}
endsnippet


########
#  IO  #
########

snippet readtxt "Read text file" b
with open(${1:filename}) as file:
	text = file.read()
	${0:lines = text.split("\n")}
endsnippet

snippet readjson "Read a JSON file" b
import json
with open(${1:filename}) as file:
	data = json.load(file)
endsnippet

snippet readtxtlines "Read text file line by line" b
with open(${1:filename}) as file:
	for i, line in enumerate(file):
		${0:print("Line", i, ":", line)}
endsnippet

snippet readcsv "Read CSV using Python library" b
import csv
with open(${1:filename}, "r") as csvfile:
	reader = csv.reader(csvfile, delimiter=",", quotechar='"')
	for row in reader:
		${0:print(", ".join(row))}
endsnippet

snippet writetxtutf8 "Write file using UTF-8 encoding" b
import codecs
with codecs.open(${0:filename}, "w", "utf-8") as file:
	${0:file.write('\ufeff')}
endsnippet

snippet writejson "Write an object to a file in JSON format" b
import json
with open(${1:filename}, "w") as file:
	json.dump(${2:data}, file, indent=4)
endsnippet

snippet factors "Prime factor decomposition" b
def prime_factors(n):
    """Return a list of the prime factors that compose n. """

    # Factorization is defined for natural numbers.
    assert n > 0

    # Base case.
    if n == 1:
        return [1]

    f = []
    # Check 2 first for saving half iterations in the next for loop.
    while n % 2 == 0:
        f.append(2)
        n /= 2
    # Check the odd numbers.
    for i in range(3, int(n**0.5) + 1, 2):
        while n % i == 0:
            f.append(i)
            n /= i

    # Prime number case.
    if n > 1:
        f.append(int(n))

    return f
endsnippet

snippet readlist "Read integer list from standard input" w
list(map(int, input().split()))
endsnippet

